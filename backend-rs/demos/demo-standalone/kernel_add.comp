#version 450

layout(constant_id = 0) const uint entry_id = 0;

layout(local_size_x = 3) in;

layout(set = 0, binding = 0) buffer lhs {
    float lhs_operand[];
};

layout(set = 1, binding = 0) buffer rhs {
    float rhs_operand[];
};

layout(set = 2, binding = 0) buffer outs {
    float outputs[];
};

float kernel_add(float lhs, float rhs) {
    return lhs + rhs;
}

float kernel_sub(float lhs, float rhs) {
    return lhs - rhs;
}

void main() {
    uint index = gl_GlobalInvocationID.x;
    if (entry_id == 0) {
        outputs[index] = kernel_add(lhs_operand[index], rhs_operand[index]);
    } else if (entry_id == 1) {
        outputs[index] = kernel_sub(lhs_operand[index], rhs_operand[index]);
    }
}
