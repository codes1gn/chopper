module  {
  func @main(%arg0: tensor<3x5xf32>, %arg1: tensor<3x5xf32>) -> (tensor<3x5xf32>, tensor<3x5xf32>, tensor<3x5xf32>) {
    %0 = "tosa.const"() {value = dense<[1.02256835, 0.553560376, 0.971909821, 1.55706441, 1.61216831, 0.645053744, 1.36710894, 1.47410822]> : tensor<8xf32>} : () -> tensor<8xf32>
    %1 = "tosa.const"() {value = dense<[5.582620e-01, 0.573728263, -0.747536361, 0.937180519, -0.990169346, -0.992096722, 0.514863789, -0.597038865]> : tensor<8xf32>} : () -> tensor<8xf32>
    %2 = "tosa.const"() {value = dense<[-0.829664707, -0.819045722, 0.664220869, 0.348844767, 0.139873877, 0.125475585, -8.572720e-01, -0.802212297]> : tensor<8xf32>} : () -> tensor<8xf32>
    %3 = "tosa.mul"(%0, %1) {shift = 0 : i32} : (tensor<8xf32>, tensor<8xf32>) -> tensor<8xf32>
    %4 = "tosa.mul"(%0, %2) {shift = 0 : i32} : (tensor<8xf32>, tensor<8xf32>) -> tensor<8xf32>
    %5 = "tosa.concat"(%3, %4) {axis = 0 : i64} : (tensor<8xf32>, tensor<8xf32>) -> tensor<16xf32>
    %6 = "tosa.slice"(%5) {size = [15], start = [0]} : (tensor<16xf32>) -> tensor<15xf32>
    %7 = "tosa.reshape"(%6) {new_shape = [3, 5]} : (tensor<15xf32>) -> tensor<3x5xf32>
    %8 = "tosa.mul"(%7, %arg1) {shift = 0 : i32} : (tensor<3x5xf32>, tensor<3x5xf32>) -> tensor<3x5xf32>
    %9 = "tosa.add"(%8, %arg0) : (tensor<3x5xf32>, tensor<3x5xf32>) -> tensor<3x5xf32>
    %10 = "tosa.identity"(%arg0) : (tensor<3x5xf32>) -> tensor<3x5xf32>
    %11 = "tosa.identity"(%arg1) : (tensor<3x5xf32>) -> tensor<3x5xf32>
    return %9, %10, %11 : tensor<3x5xf32>, tensor<3x5xf32>, tensor<3x5xf32>
  }
}

